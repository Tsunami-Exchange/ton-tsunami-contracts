;; global slice trader_address;                                    ;; Trader address
;; global slice vamm_addr;                                         ;; VAMM address
;; global int is_busy;                                             ;; Flag indicating whether position is processing by amm or not

;; global int size;                                       ;; Trader position size (base asset)
;; global int margin;                                     ;; Trader position margin (quote asset) - how much quote asset is supporting the position
;; global int open_notional;                              ;; Trader position open notional - how much quote asset they have borrowed
;; global int last_updated_cumulative_premium_fraction;   ;; Trader position last updated cumulative premium fraction
;; global int sequence;                                   ;; When position was closed
;; global int fee;                                        ;; Fee for current position
;; global int last_updated_timestamp;                     ;; Trader position last updated timestamp

(slice, slice, int, cell) load_data() impure {
  slice ds = get_data().begin_parse();

  return (ds~load_msg_addr(), ;; trader_addr
    ds~load_msg_addr(),       ;; vamm_addr
    ds~load_uint(1),          ;; is_busy
    ds.preload_ref()          ;; position_ref
  );
}

() save_data(trader_addr slice, vamm_addr slice, is_busy int, position_ref cell) impure {
  set_data(
    begin_cell()
            .store_slice(trader_addr)
            .store_slice(vamm_addr)
            .store_uint(is_busy, 1)
            .store_ref(position_ref)
            .end_cell()
  );
}